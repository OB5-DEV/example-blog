---
import Header from "../components/Header.astro";
import Footer from "../components/Footer.astro";
import BaseHead from "../components/BaseHead.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../consts";
---
<!doctype html>
<html lang="en">
<head>
    <BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Snake Game</title>
    <style>
         body {
            overflow:;
        }
        .game-container {
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        .game {
            border: 1px solid black;
            background-color: white;s
        }
    </style>
</head>
<body>
    <Header title={SITE_TITLE} />
		<div class="stars"></div>
		<div class="stars2"></div>
		<div class="stars3"></div>
    <div class="game-container">
        <canvas class="game" width="400" height="400"></canvas>
    </div>

<script>
        const canvas = document.querySelector(".game");
        const ctx = canvas.getContext("2d");
        const gridSize = 20;
        let snake = [{ x: 5, y: 5 }];
        let food = { x: 10, y: 10 };
        let dx = 1;
        let dy = 0;
        let gameInterval;

        function resetGame() {
            clearInterval(gameInterval);
            snake = [{ x: 5, y: 5 }];
            dx = 1;
            dy = 0;
            food = {
                x: Math.floor(Math.random() * (canvas.width / gridSize)),
                y: Math.floor(Math.random() * (canvas.height / gridSize)),
            };
            gameInterval = setInterval(gameLoop, 100);
        }

        function gameLoop() {
            ctx.clearRect(0, 0, canvas.width, canvas.height);

            const head = { x: snake[0].x + dx, y: snake[0].y + dy };
            snake.unshift(head);

            if (head.x === food.x && head.y === food.y) {
                food = {
                    x: Math.floor(Math.random() * (canvas.width / gridSize)),
                    y: Math.floor(Math.random() * (canvas.height / gridSize)),
                };
            } else {
                snake.pop();
            }

            if (
                head.x < 0 ||
                head.x >= canvas.width / gridSize ||
                head.y < 0 ||
                head.y >= canvas.height / gridSize ||
                snake.slice(5).some(segment => segment.x === head.x && segment.y === head.y)
            ) {
                resetGame();
                return;
            }

            snake.forEach(segment => {
                ctx.fillStyle = "green";
                ctx.fillRect(segment.x * gridSize, segment.y * gridSize, gridSize, gridSize);
            });

            ctx.fillStyle = "red";
            ctx.fillRect(food.x * gridSize, food.y * gridSize, gridSize, gridSize);
        }

        document.addEventListener("keydown", event => {
            switch (event.key) {
                case "w":
                    if (dy !== 1) {
                        dx = 0;
                        dy = -1;
                    }
                    break;
                case "s":
                    if (dy !== -1) {
                        dx = 0;
                        dy = 1;
                    }
                    break;
                case "a":
                    if (dx !== 1) {
                        dx = -1;
                        dy = 0;
                    }
                    break;
                case "d":
                    if (dx !== -1) {
                        dx = 1;
                        dy = 0;
                    }
                    break;
            }
        });
        resetGame();
    </script>
    <Footer />
</body>
</html>
